{
  "version": 3,
  "sources": ["../lib/from_iterator.js", "../lib/from_iterator_map.js", "../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @returns {Array} output array\n*/\nfunction fromIterator( it ) {\n\tvar out;\n\tvar v;\n\n\tout = [];\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tout.push( v.value );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = fromIterator;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @param {Function} clbk - callback to invoke for each iterated value\n* @param {*} thisArg - invocation context\n* @returns {Array} output array\n*/\nfunction fromIteratorMap( it, clbk, thisArg ) {\n\tvar out;\n\tvar v;\n\tvar i;\n\n\tout = [];\n\ti = -1;\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\ti += 1;\n\t\tout.push( clbk.call( thisArg, v.value, i ) );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = fromIteratorMap;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable max-len, no-restricted-syntax, no-invalid-this, max-lines */\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( '@stdlib/assert-is-nonnegative-integer' ).isPrimitive;\nvar isInteger = require( '@stdlib/assert-is-integer' ).isPrimitive;\nvar isCollection = require( '@stdlib/assert-is-collection' );\nvar isArrayBuffer = require( '@stdlib/assert-is-arraybuffer' );\nvar isObject = require( '@stdlib/assert-is-object' );\nvar isFunction = require( '@stdlib/assert-is-function' );\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar isByteOrder = require( '@stdlib/array-base-assert-is-byte-order' );\nvar lowercase = require( '@stdlib/string-base-lowercase' );\nvar hasIteratorSymbolSupport = require( '@stdlib/assert-has-iterator-symbol-support' );\nvar ITERATOR_SYMBOL = require( '@stdlib/symbol-iterator' );\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar isPrototypeOf = require( '@stdlib/assert-is-prototype-of' ); // eslint-disable-line stdlib/no-redeclare\nvar setReadOnlyAccessor = require( '@stdlib/utils-define-nonenumerable-read-only-accessor' );\nvar ArrayBuffer = require( '@stdlib/array-buffer' );\nvar DataView = require( '@stdlib/array-dataview' );\nvar getter = require( '@stdlib/array-base-getter' );\nvar accessorGetter = require( '@stdlib/array-base-accessor-getter' );\nvar contains = require( '@stdlib/array-base-assert-contains' ).factory;\nvar bytesPerElement = require( '@stdlib/ndarray-base-bytes-per-element' );\nvar capitalize = require( '@stdlib/string-base-capitalize' );\nvar format = require( '@stdlib/string-format' );\nvar fromIterator = require( './from_iterator.js' );\nvar fromIteratorMap = require( './from_iterator_map.js' );\n\n\n// VARIABLES //\n\nvar HAS_ITERATOR_SYMBOL = hasIteratorSymbolSupport();\nvar LITTLE_ENDIAN = 'little-endian';\nvar BIG_ENDIAN = 'big-endian';\nvar DTYPES = [ 'float64', 'float32', 'int32', 'int16', 'uint32', 'uint16' ];\nvar DTYPE2SET = {\n\t'float64': 'setFloat64',\n\t'float32': 'setFloat32',\n\t'int32': 'setInt32',\n\t'int16': 'setInt16',\n\t'uint32': 'setUint32',\n\t'uint16': 'setUint16'\n};\nvar DTYPE2GET = {\n\t'float64': 'getFloat64',\n\t'float32': 'getFloat32',\n\t'int32': 'getInt32',\n\t'int16': 'getInt16',\n\t'uint32': 'getUint32',\n\t'uint16': 'getUint16'\n};\nvar CHAR2ARTICLE = {\n\t'c': 'a',\n\t'f': 'a',\n\t'i': 'an',\n\t'u': 'a',\n\t'b': 'a'\n};\nvar isDataType = contains( DTYPES );\n\n\n// FUNCTIONS //\n\n/**\n* Normalizes a byte order value.\n*\n* @private\n* @param {*} value - byte order\n* @returns {(string|null)} normalized byte order\n*/\nfunction byteOrder( value ) {\n\treturn ( isString( value ) ) ? lowercase( value ) : null;\n}\n\n/**\n* Tests whether a provided byte order is little-endian byte order.\n*\n* @private\n* @param {string} value - byte order\n* @returns {boolean} boolean indicating whether a byte order is little-endian byte order\n*/\nfunction isLittleEndian( value ) {\n\treturn ( value === LITTLE_ENDIAN );\n}\n\n/**\n* Resolves a byte order string from a boolean flag.\n*\n* @private\n* @param {boolean} isLE - flag indicating whether an array is little-endian\n* @returns {string} resolved byte order\n*/\nfunction flag2byteOrder( isLE ) {\n\treturn ( isLE ) ? LITTLE_ENDIAN : BIG_ENDIAN;\n}\n\n/**\n* Converts a data type string to a constructor name.\n*\n* @private\n* @param {string} dtype - data type\n* @returns {string} constructor name\n*\n* @example\n* var n = dtype2ctor( 'float64' );\n* // returns 'Float64ArrayFE'\n*\n* @example\n* var n = dtype2ctor( 'int32' );\n* // returns 'Int32ArrayFE'\n*/\nfunction dtype2ctor( dtype ) {\n\treturn capitalize( dtype ) + 'ArrayFE';\n}\n\n\n// MAIN //\n\n/**\n* Returns a typed array constructor for creating typed arrays having a specified byte order.\n*\n* @param {string} dtype - typed array data type\n* @throws {TypeError} first argument must be a supported data type\n* @returns {Function} typed array constructor\n*\n* @example\n* var Float64ArrayFE = factory( 'float64' );\n*\n* var arr = new Float64ArrayFE( 'little-endian' );\n* // returns <Float64ArrayFE>\n*\n* var len = arr.length;\n* // returns 0\n*\n* @example\n* var Float64ArrayFE = factory( 'float64' );\n*\n* var arr = new Float64ArrayFE( 'little-endian', 2 );\n* // returns <Float64ArrayFE>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var Float64ArrayFE = factory( 'float64' );\n*\n* var arr = new Float64ArrayFE( 'little-endian', [ 1.0, 2.0 ] );\n* // returns <Float64ArrayFE>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array-buffer' );\n*\n* var Float64ArrayFE = factory( 'float64' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = new Float64ArrayFE( 'little-endian', buf );\n* // returns <Float64ArrayFE>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array-buffer' );\n*\n* var Float64ArrayFE = factory( 'float64' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = new Float64ArrayFE( 'little-endian', buf, 8 );\n* // returns <Float64ArrayFE>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array-buffer' );\n*\n* var Float64ArrayFE = factory( 'float64' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = new Float64ArrayFE( 'little-endian', buf, 8, 2 );\n* // returns <Float64ArrayFE>\n*\n* var len = arr.length;\n* // returns 2\n*/\nfunction factory( dtype ) { // eslint-disable-line max-lines-per-function, stdlib/jsdoc-require-throws-tags\n\tvar BYTES_PER_ELEMENT;\n\tvar CTOR_NAME;\n\tvar GETTER;\n\tvar SETTER;\n\n\tif ( !isDataType( dtype ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a supported data type. Value: `%s`.', dtype ) );\n\t}\n\tBYTES_PER_ELEMENT = bytesPerElement( dtype );\n\tCTOR_NAME = dtype2ctor( dtype );\n\tGETTER = DTYPE2GET[ dtype ];\n\tSETTER = DTYPE2SET[ dtype ];\n\n\t/**\n\t* Typed array constructor which returns a typed array representing an array of values in a specified byte order.\n\t*\n\t* @private\n\t* @constructor\n\t* @param {string} endianness - byte order\n\t* @param {(NonNegativeInteger|Collection|ArrayBuffer|Iterable)} [arg] - length, typed array, array-like object, buffer, or an iterable\n\t* @param {NonNegativeInteger} [byteOffset=0] - byte offset\n\t* @param {NonNegativeInteger} [length] - view length\n\t* @throws {TypeError} first argument must be a supported byte order\n\t* @throws {TypeError} if provided only two arguments, the second argument must be a valid argument\n\t* @throws {TypeError} byte offset must be a nonnegative integer\n\t* @throws {RangeError} must provide sufficient memory to accommodate byte offset and view length requirements\n\t* @returns {TypedArray} typed array instance\n\t*/\n\tfunction TypedArray() {\n\t\tvar byteOffset;\n\t\tvar endianness;\n\t\tvar nargs;\n\t\tvar isLE;\n\t\tvar buf;\n\t\tvar len;\n\t\tvar arg;\n\t\tvar tmp;\n\n\t\tnargs = arguments.length;\n\t\tif ( !(this instanceof TypedArray) ) {\n\t\t\tif ( nargs < 2 ) {\n\t\t\t\treturn new TypedArray( arguments[0] );\n\t\t\t}\n\t\t\tif ( nargs === 2 ) {\n\t\t\t\treturn new TypedArray( arguments[0], arguments[1] );\n\t\t\t}\n\t\t\tif ( nargs === 3 ) {\n\t\t\t\treturn new TypedArray( arguments[0], arguments[1], arguments[2] );\n\t\t\t}\n\t\t\treturn new TypedArray( arguments[0], arguments[1], arguments[2], arguments[3] );\n\t\t}\n\t\tendianness = byteOrder( arguments[ 0 ] );\n\t\tif ( endianness === null || !isByteOrder( endianness ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a supported byte order. Value: `%s`.', arguments[ 0 ] ) );\n\t\t}\n\t\tisLE = isLittleEndian( endianness );\n\n\t\tnargs -= 1;\n\n\t\t// Create the underlying data buffer...\n\t\tif ( nargs === 0 ) {\n\t\t\tbuf = new DataView( new ArrayBuffer( 0 ) ); // backward-compatibility\n\t\t} else if ( nargs === 1 ) {\n\t\t\targ = arguments[ nargs ];\n\t\t\tif ( isNonNegativeInteger( arg ) ) {\n\t\t\t\tbuf = new DataView( new ArrayBuffer( arg*BYTES_PER_ELEMENT ) );\n\t\t\t} else if ( isCollection( arg ) ) {\n\t\t\t\tbuf = fromArray( new DataView( new ArrayBuffer( arg.length*BYTES_PER_ELEMENT ) ), arg, isLE );\n\t\t\t} else if ( isArrayBuffer( arg ) ) {\n\t\t\t\tbuf = new DataView( arg );\n\t\t\t} else if ( isObject( arg ) ) {\n\t\t\t\tif ( HAS_ITERATOR_SYMBOL === false ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Environment lacks Symbol.iterator support. Must provide a length, ArrayBuffer, typed array, or array-like object. Value: `%s`.', arg ) );\n\t\t\t\t}\n\t\t\t\tif ( !isFunction( arg[ ITERATOR_SYMBOL ] ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', arg ) );\n\t\t\t\t}\n\t\t\t\tbuf = arg[ ITERATOR_SYMBOL ]();\n\t\t\t\tif ( !isFunction( buf.next ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', arg ) );\n\t\t\t\t}\n\t\t\t\ttmp = fromIterator( buf );\n\t\t\t\tbuf = fromArray( new DataView( new ArrayBuffer( tmp.length*BYTES_PER_ELEMENT ) ), tmp, isLE );\n\t\t\t} else {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', arg ) );\n\t\t\t}\n\t\t} else {\n\t\t\tbuf = arguments[ 1 ];\n\t\t\tif ( !isArrayBuffer( buf ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide an ArrayBuffer. Value: `%s`.', buf ) );\n\t\t\t}\n\t\t\tbyteOffset = arguments[ 2 ];\n\t\t\tif ( !isNonNegativeInteger( byteOffset ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Byte offset must be a nonnegative integer. Value: `%s`.', byteOffset ) );\n\t\t\t}\n\t\t\tif ( nargs === 2 ) {\n\t\t\t\tbuf = new DataView( buf, byteOffset );\n\t\t\t} else {\n\t\t\t\tlen = arguments[ 3 ];\n\t\t\t\tif ( !isNonNegativeInteger( len ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Length must be a nonnegative integer. Value: `%s`.', len ) );\n\t\t\t\t}\n\t\t\t\tlen *= BYTES_PER_ELEMENT;\n\t\t\t\tif ( len > (buf.byteLength-byteOffset) ) {\n\t\t\t\t\tthrow new RangeError( format( 'invalid arguments. ArrayBuffer has insufficient capacity. Either decrease the array length or provide a bigger buffer. Minimum capacity: `%u`.', len ) );\n\t\t\t\t}\n\t\t\t\tbuf = new DataView( buf, byteOffset, len );\n\t\t\t}\n\t\t}\n\t\tsetReadOnly( this, '_buffer', buf );\n\t\tsetReadOnly( this, '_length', buf.byteLength/BYTES_PER_ELEMENT );\n\t\tsetReadOnly( this, '_isLE', isLE );\n\n\t\treturn this;\n\t}\n\n\t/**\n\t* Size (in bytes) of each array element.\n\t*\n\t* @private\n\t* @name BYTES_PER_ELEMENT\n\t* @memberof TypedArray\n\t* @readonly\n\t* @type {PositiveInteger}\n\t*/\n\tsetReadOnly( TypedArray, 'BYTES_PER_ELEMENT', BYTES_PER_ELEMENT );\n\n\t/**\n\t* Constructor name.\n\t*\n\t* @private\n\t* @name name\n\t* @memberof TypedArray\n\t* @readonly\n\t* @type {string}\n\t*/\n\tsetReadOnly( TypedArray, 'name', CTOR_NAME );\n\n\t/**\n\t* Creates a new typed array from an array-like object or an iterable.\n\t*\n\t* @private\n\t* @name from\n\t* @memberof TypedArray\n\t* @type {Function}\n\t* @param {string} endianness - byte order\n\t* @param {(Collection|Iterable)} src - array-like object or iterable\n\t* @param {Function} [clbk] - callback to invoke for each source element\n\t* @param {*} [thisArg] - context\n\t* @throws {TypeError} `this` context must be a constructor\n\t* @throws {TypeError} `this` must be a typed array constructor\n\t* @throws {TypeError} first argument must be a supported byte order\n\t* @throws {TypeError} second argument must be an array-like object or an iterable\n\t* @throws {TypeError} third argument must be a function\n\t* @returns {TypedArray} typed array instance\n\t*/\n\tsetReadOnly( TypedArray, 'from', function from( endianness, src ) {\n\t\tvar thisArg;\n\t\tvar order;\n\t\tvar nargs;\n\t\tvar clbk;\n\t\tvar isLE;\n\t\tvar out;\n\t\tvar buf;\n\t\tvar tmp;\n\t\tvar get;\n\t\tvar len;\n\t\tvar i;\n\t\tif ( !isFunction( this ) ) {\n\t\t\tthrow new TypeError( 'invalid invocation. `this` context must be a constructor.' );\n\t\t}\n\t\tif ( !isTypedArrayConstructor( this ) ) {\n\t\t\tthrow new TypeError( format( 'invalid invocation. `this` is not %s %s.', CHAR2ARTICLE[ dtype[0] ], CTOR_NAME ) );\n\t\t}\n\t\torder = byteOrder( endianness );\n\t\tif ( order === null || !isByteOrder( order ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a supported byte order. Value: `%s`.', endianness ) );\n\t\t}\n\t\tisLE = isLittleEndian( order );\n\n\t\tnargs = arguments.length;\n\t\tif ( nargs > 2 ) {\n\t\t\tclbk = arguments[ 2 ];\n\t\t\tif ( !isFunction( clbk ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', clbk ) );\n\t\t\t}\n\t\t\tif ( nargs > 3 ) {\n\t\t\t\tthisArg = arguments[ 3 ];\n\t\t\t}\n\t\t}\n\t\tif ( isCollection( src ) ) {\n\t\t\tif ( clbk ) {\n\t\t\t\tlen = src.length;\n\t\t\t\tif ( src.get && src.set ) {\n\t\t\t\t\tget = accessorGetter( 'default' );\n\t\t\t\t} else {\n\t\t\t\t\tget = getter( 'default' );\n\t\t\t\t}\n\t\t\t\tout = new this( order, len );\n\t\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tbuf[ SETTER ]( i*BYTES_PER_ELEMENT, clbk.call( thisArg, get( src, i ), i ), isLE );\n\t\t\t\t}\n\t\t\t\treturn out;\n\t\t\t}\n\t\t\treturn new this( order, src );\n\t\t}\n\t\tif ( isObject( src ) && HAS_ITERATOR_SYMBOL && isFunction( src[ ITERATOR_SYMBOL ] ) ) {\n\t\t\tbuf = src[ ITERATOR_SYMBOL ]();\n\t\t\tif ( !isFunction( buf.next ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an array-like object or an iterable. Value: `%s`.', src ) );\n\t\t\t}\n\t\t\tif ( clbk ) {\n\t\t\t\ttmp = fromIteratorMap( buf, clbk, thisArg );\n\t\t\t} else {\n\t\t\t\ttmp = fromIterator( buf );\n\t\t\t}\n\t\t\tlen = tmp.length;\n\t\t\tout = new this( order, len );\n\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tbuf[ SETTER ]( i*BYTES_PER_ELEMENT, tmp[ i ], isLE );\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an array-like object or an iterable. Value: `%s`.', src ) );\n\t});\n\n\t/**\n\t* Creates a new typed array from a variable number of arguments.\n\t*\n\t* @private\n\t* @name of\n\t* @memberof TypedArray\n\t* @type {Function}\n\t* @param {string} endianness - byte order\n\t* @param {...*} element - array elements\n\t* @throws {TypeError} `this` context must be a constructor\n\t* @throws {TypeError} `this` must be a typed array constructor\n\t* @throws {TypeError} first argument must be a supported byte order\n\t* @returns {TypedArray} typed array instance\n\t*/\n\tsetReadOnly( TypedArray, 'of', function of( endianness ) {\n\t\tvar order;\n\t\tvar args;\n\t\tvar i;\n\t\tif ( !isFunction( this ) ) {\n\t\t\tthrow new TypeError( 'invalid invocation. `this` context must be a constructor.' );\n\t\t}\n\t\tif ( !isTypedArrayConstructor( this ) ) {\n\t\t\tthrow new TypeError( format( 'invalid invocation. `this` is not %s %s.', CHAR2ARTICLE[ dtype[0] ], CTOR_NAME ) );\n\t\t}\n\t\torder = byteOrder( endianness );\n\t\tif ( order === null || !isByteOrder( order ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a supported byte order. Value: `%s`.', endianness ) );\n\t\t}\n\t\targs = [];\n\t\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\t\targs.push( arguments[ i ] );\n\t\t}\n\t\treturn new this( order, args );\n\t});\n\n\t/**\n\t* Returns an array element located at integer position (index) `i`, with support for both nonnegative and negative integer indices.\n\t*\n\t* @private\n\t* @name at\n\t* @memberof TypedArray.prototype\n\t* @type {Function}\n\t* @param {integer} idx - element index\n\t* @throws {TypeError} `this` must be a typed array instance\n\t* @throws {TypeError} must provide an integer\n\t* @returns {(*|void)} array element\n\t*/\n\tsetReadOnly( TypedArray.prototype, 'at', function at( idx ) {\n\t\tvar len;\n\t\tif ( !isTypedArray( this ) ) {\n\t\t\tthrow new TypeError( format( 'invalid invocation. `this` is not %s %s.', CHAR2ARTICLE[ dtype[0] ], CTOR_NAME ) );\n\t\t}\n\t\tif ( !isInteger( idx ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide an integer. Value: `%s`.', idx ) );\n\t\t}\n\t\tlen = this._length;\n\t\tif ( idx < 0 ) {\n\t\t\tidx += len;\n\t\t}\n\t\tif ( idx < 0 || idx >= len ) {\n\t\t\treturn;\n\t\t}\n\t\treturn this._buffer[ GETTER ]( idx * BYTES_PER_ELEMENT, this._isLE );\n\t});\n\n\t/**\n\t* Pointer to the underlying data buffer.\n\t*\n\t* @private\n\t* @name buffer\n\t* @memberof TypedArray.prototype\n\t* @readonly\n\t* @type {ArrayBuffer}\n\t*/\n\tsetReadOnlyAccessor( TypedArray.prototype, 'buffer', function get() {\n\t\treturn this._buffer.buffer;\n\t});\n\n\t/**\n\t* Size (in bytes) of the array.\n\t*\n\t* @private\n\t* @name byteLength\n\t* @memberof TypedArray.prototype\n\t* @readonly\n\t* @type {NonNegativeInteger}\n\t*/\n\tsetReadOnlyAccessor( TypedArray.prototype, 'byteLength', function get() {\n\t\treturn this._buffer.byteLength;\n\t});\n\n\t/**\n\t* Offset (in bytes) of the array from the start of its underlying `ArrayBuffer`.\n\t*\n\t* @private\n\t* @name byteOffset\n\t* @memberof TypedArray.prototype\n\t* @readonly\n\t* @type {NonNegativeInteger}\n\t*/\n\tsetReadOnlyAccessor( TypedArray.prototype, 'byteOffset', function get() {\n\t\treturn this._buffer.byteOffset;\n\t});\n\n\t/**\n\t* Size (in bytes) of each array element.\n\t*\n\t* @private\n\t* @name BYTES_PER_ELEMENT\n\t* @memberof TypedArray.prototype\n\t* @readonly\n\t* @type {PositiveInteger}\n\t*/\n\tsetReadOnly( TypedArray.prototype, 'BYTES_PER_ELEMENT', TypedArray.BYTES_PER_ELEMENT );\n\n\t/**\n\t* Tests whether all elements in an array pass a test implemented by a predicate function.\n\t*\n\t* @name every\n\t* @memberof TypedArray.prototype\n\t* @type {Function}\n\t* @param {Function} predicate - predicate function\n\t* @param {*} [thisArg] - predicate function execution context\n\t* @throws {TypeError} `this` must be a typed array instance\n\t* @throws {TypeError} first argument must be a function\n\t* @returns {boolean} boolean indicating whether all elements pass a test\n\t*/\n\tsetReadOnly( TypedArray.prototype, 'every', function every( predicate, thisArg ) {\n\t\tvar buf;\n\t\tvar i;\n\n\t\tif ( !isTypedArray( this ) ) {\n\t\t\tthrow new TypeError( format( 'invalid invocation. `this` is not %s %s.', CHAR2ARTICLE[ dtype[0] ], CTOR_NAME ) );\n\t\t}\n\t\tif ( !isFunction( predicate ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t\t}\n\t\tbuf = this._buffer;\n\t\tfor ( i = 0; i < this._length; i++ ) {\n\t\t\tif ( !predicate.call( thisArg, buf[ GETTER ]( i * BYTES_PER_ELEMENT, this._isLE ), i, this ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t});\n\n\t/**\n\t* Invokes a function once for each array element.\n\t*\n\t* @name forEach\n\t* @memberof TypedArray.prototype\n\t* @type {Function}\n\t* @param {Function} fcn - function to invoke\n\t* @param {*} [thisArg] - function invocation context\n\t* @throws {TypeError} `this` must be a typed array instance\n\t* @throws {TypeError} first argument must be a function\n\t*/\n\tsetReadOnly( TypedArray.prototype, 'forEach', function forEach( fcn, thisArg ) {\n\t\tvar buf;\n\t\tvar i;\n\n\t\tif ( !isTypedArray( this ) ) {\n\t\t\tthrow new TypeError( format( 'invalid invocation. `this` is not %s %s.', CHAR2ARTICLE[ dtype[0] ], CTOR_NAME ) );\n\t\t}\n\t\tif ( !isFunction( fcn ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t\t}\n\t\tbuf = this._buffer;\n\t\tfor ( i = 0; i < this._length; i++ ) {\n\t\t\tfcn.call( thisArg, buf[ GETTER ]( i*BYTES_PER_ELEMENT, this._isLE ), i, this );\n\t\t}\n\t});\n\n\t/**\n\t* Returns an array element.\n\t*\n\t* @private\n\t* @name get\n\t* @memberof TypedArray.prototype\n\t* @type {Function}\n\t* @param {NonNegativeInteger} idx - element index\n\t* @throws {TypeError} `this` must be a typed array instance\n\t* @throws {TypeError} must provide a nonnegative integer\n\t* @returns {(*|void)} array element\n\t*/\n\tsetReadOnly( TypedArray.prototype, 'get', function get( idx ) {\n\t\tif ( !isTypedArray( this ) ) {\n\t\t\tthrow new TypeError( format( 'invalid invocation. `this` is not %s %s.', CHAR2ARTICLE[ dtype[0] ], CTOR_NAME ) );\n\t\t}\n\t\tif ( !isNonNegativeInteger( idx ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a nonnegative integer. Value: `%s`.', idx ) );\n\t\t}\n\t\tif ( idx >= this._length ) {\n\t\t\treturn;\n\t\t}\n\t\treturn this._buffer[ GETTER ]( idx*BYTES_PER_ELEMENT, this._isLE );\n\t});\n\n\t/**\n\t* Returns the index of the first occurrence of a given element.\n\t*\n\t* @private\n\t* @name indexOf\n\t* @memberof TypedArray.prototype\n\t* @type {Function}\n\t* @param {*} searchElement - element to search for\n\t* @param {integer} [fromIndex=0] - starting index (inclusive)\n\t* @throws {TypeError} `this` must be a typed array instance\n\t* @throws {TypeError} second argument must be an integer\n\t* @returns {integer} index or -1\n\t*/\n\tsetReadOnly( TypedArray.prototype, 'indexOf', function indexOf( searchElement, fromIndex ) {\n\t\tvar buf;\n\t\tvar i;\n\n\t\tif ( !isTypedArray( this ) ) {\n\t\t\tthrow new TypeError( format( 'invalid invocation. `this` is not %s %s.', CHAR2ARTICLE[ dtype[0] ], CTOR_NAME ) );\n\t\t}\n\t\tif ( arguments.length > 1 ) {\n\t\t\tif ( !isInteger( fromIndex ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', fromIndex ) );\n\t\t\t}\n\t\t\tif ( fromIndex < 0 ) {\n\t\t\t\tfromIndex += this._length;\n\t\t\t\tif ( fromIndex < 0 ) {\n\t\t\t\t\tfromIndex = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfromIndex = 0;\n\t\t}\n\t\tbuf = this._buffer;\n\t\tfor ( i = fromIndex; i < this._length; i++ ) {\n\t\t\tif ( buf[ GETTER ]( i * BYTES_PER_ELEMENT, this._isLE ) === searchElement ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t});\n\n\t/**\n\t* Returns the index of the last occurrence of a given element.\n\t*\n\t* @private\n\t* @name lastIndexOf\n\t* @memberof TypedArray.prototype\n\t* @type {Function}\n\t* @param {*} searchElement - element to search for\n\t* @param {integer} [fromIndex=this._length-1] - starting index (inclusive)\n\t* @throws {TypeError} `this` must be a typed array instance\n\t* @throws {TypeError} second argument must be an integer\n\t* @returns {integer} index or -1\n\t*/\n\tsetReadOnly( TypedArray.prototype, 'lastIndexOf', function lastIndexOf( searchElement, fromIndex ) {\n\t\tvar buf;\n\t\tvar i;\n\n\t\tif ( !isTypedArray( this ) ) {\n\t\t\tthrow new TypeError( format( 'invalid invocation. `this` is not %s %s.', CHAR2ARTICLE[ dtype[ 0 ] ], CTOR_NAME ) );\n\t\t}\n\t\tif ( arguments.length > 1 ) {\n\t\t\tif ( !isInteger( fromIndex ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', fromIndex ) );\n\t\t\t}\n\t\t\tif ( fromIndex < 0 ) {\n\t\t\t\tfromIndex += this._length;\n\t\t\t}\n\t\t\tif ( fromIndex < 0 ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif ( fromIndex >= this._length ) {\n\t\t\t\tfromIndex = this._length - 1;\n\t\t\t}\n\t\t} else {\n\t\t\tfromIndex = this._length - 1;\n\t\t}\n\t\tbuf = this._buffer;\n\t\tfor ( i = fromIndex; i >= 0; i-- ) {\n\t\t\tif ( buf[ GETTER ]( i * BYTES_PER_ELEMENT, this._isLE ) === searchElement ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t});\n\n\t/**\n\t* Number of array elements.\n\t*\n\t* @private\n\t* @name length\n\t* @memberof TypedArray.prototype\n\t* @readonly\n\t* @type {NonNegativeInteger}\n\t*/\n\tsetReadOnlyAccessor( TypedArray.prototype, 'length', function get() {\n\t\treturn this._length;\n\t});\n\n\t/**\n\t* Returns a new array with each element being the result of a provided callback function.\n\t*\n\t* @private\n\t* @name map\n\t* @memberof TypedArray.prototype\n\t* @type {Function}\n\t* @param {Function} fcn - function to invoke\n\t* @param {*} [thisArg] - function invocation context\n\t* @throws {TypeError} `this` must be a typed array instance\n\t* @throws {TypeError} first argument must be a function\n\t* @returns {TypedArray} new typed array\n\t*/\n\tsetReadOnly( TypedArray.prototype, 'map', function map( fcn, thisArg ) {\n\t\tvar obuf;\n\t\tvar out;\n\t\tvar buf;\n\t\tvar i;\n\t\tvar v;\n\t\tif ( !isTypedArray( this ) ) {\n\t\t\tthrow new TypeError( format( 'invalid invocation. `this` is not %s %s.', CHAR2ARTICLE[ dtype[0] ], CTOR_NAME ) );\n\t\t}\n\t\tif ( !isFunction( fcn ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t\t}\n\t\tbuf = this._buffer;\n\t\tout = new this.constructor( flag2byteOrder( this._isLE ), this._length );\n\t\tobuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\tfor ( i = 0; i < this._length; i++ ) {\n\t\t\tv = fcn.call( thisArg, buf[ GETTER ]( i * BYTES_PER_ELEMENT, this._isLE ), i, this );\n\t\t\tobuf[ SETTER ]( i * BYTES_PER_ELEMENT, v, this._isLE );\n\t\t}\n\t\treturn out;\n\t});\n\n\t/**\n\t* Applies a provided callback function to each element of the array, in order, passing in the return value from the calculation on the preceding element and returning the accumulated result upon completion.\n\t*\n\t* @name reduce\n\t* @memberof TypedArray.prototype\n\t* @type {Function}\n\t* @param {Function} reducer - callback function\n\t* @param {*} [initialValue] - initial value\n\t* @throws {TypeError} `this` must be a typed array\n\t* @throws {Error} if not provided an initial value, the array must have at least one element\n\t* @returns {*} accumulated result\n\t*/\n\tsetReadOnly( TypedArray.prototype, 'reduce', function reduce( reducer, initialValue ) {\n\t\tvar buf;\n\t\tvar len;\n\t\tvar acc;\n\t\tvar i;\n\n\t\tif ( !isTypedArray( this ) ) {\n\t\t\tthrow new TypeError( format( 'invalid invocation. `this` is not %s %s.', CHAR2ARTICLE[ dtype[0] ], CTOR_NAME ) );\n\t\t}\n\t\tif ( !isFunction( reducer ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', reducer ) );\n\t\t}\n\t\tbuf = this._buffer;\n\t\tlen = this._length;\n\t\tif ( arguments.length > 1 ) {\n\t\t\tacc = initialValue;\n\t\t\ti = 0;\n\t\t} else {\n\t\t\tif ( len === 0 ) {\n\t\t\t\tthrow new Error( 'invalid operation. If not provided an initial value, an array must contain at least one element.' );\n\t\t\t}\n\t\t\tacc = buf[ GETTER ]( 0 * BYTES_PER_ELEMENT, this._isLE );\n\t\t\ti = 1;\n\t\t}\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tacc = reducer( acc, buf[ GETTER ]( i * BYTES_PER_ELEMENT, this._isLE ), i, this );\n\t\t}\n\t\treturn acc;\n\t});\n\n\t/**\n\t* Applies a provided callback function to each element of the array, in reverse order, passing in the return value from the calculation on the following element and returning the accumulated result upon completion.\n\t*\n\t* @name reduceRight\n\t* @memberof TypedArray.prototype\n\t* @type {Function}\n\t* @param {Function} reducer - callback function\n\t* @param {*} [initialValue] - initial value\n\t* @throws {TypeError} `this` must be a typed array\n\t* @throws {Error} if not provided an initial value, the array must have at least one element\n\t* @returns {*} accumulated result\n\t*/\n\tsetReadOnly( TypedArray.prototype, 'reduceRight', function reduceRight( reducer, initialValue ) {\n\t\tvar buf;\n\t\tvar len;\n\t\tvar acc;\n\t\tvar i;\n\n\t\tif ( !isTypedArray( this ) ) {\n\t\t\tthrow new TypeError( format( 'invalid invocation. `this` is not %s %s.', CHAR2ARTICLE[ dtype[0] ], CTOR_NAME ) );\n\t\t}\n\t\tif ( !isFunction( reducer ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', reducer ) );\n\t\t}\n\t\tbuf = this._buffer;\n\t\tlen = this._length;\n\t\tif ( arguments.length > 1 ) {\n\t\t\tacc = initialValue;\n\t\t\ti = len - 1;\n\t\t} else {\n\t\t\tif ( len === 0 ) {\n\t\t\t\tthrow new Error( 'invalid operation. If not provided an initial value, an array must contain at least one element.' );\n\t\t\t}\n\t\t\tacc = buf[ GETTER ]( ( len - 1 ) * BYTES_PER_ELEMENT, this._isLE );\n\t\t\ti = len - 2;\n\t\t}\n\t\tfor ( ; i >= 0; i-- ) {\n\t\t\tacc = reducer( acc, buf[ GETTER ]( i * BYTES_PER_ELEMENT, this._isLE ), i, this );\n\t\t}\n\t\treturn acc;\n\t});\n\n\t/**\n\t* Sets an array element.\n\t*\n\t* ## Notes\n\t*\n\t* -   When provided a typed array, we must check whether the source array shares the same buffer as the target array and whether the underlying memory overlaps. In particular, we are concerned with the following scenario:\n\t*\n\t*     ```text\n\t*     buf:                ---------------------\n\t*     src: ---------------------\n\t*     ```\n\t*\n\t*     In the above, as we copy values from `src`, we will overwrite values in the `src` view, resulting in duplicated values copied into the end of `buf`, which is not intended. Hence, to avoid overwriting source values, we must **copy** source values to a temporary array.\n\t*\n\t*     In the other overlapping scenario,\n\t*\n\t*     ```text\n\t*     buf: ---------------------\n\t*     src:                ---------------------\n\t*     ```\n\t*\n\t*     by the time we begin copying into the overlapping region, we are copying from the end of `src`, a non-overlapping region, which means we don't run the risk of copying copied values, rather than the original `src` values, as intended.\n\t*\n\t* @private\n\t* @name set\n\t* @memberof TypedArray.prototype\n\t* @type {Function}\n\t* @param {(Collection|TypedArray|*)} value - value(s)\n\t* @param {NonNegativeInteger} [i=0] - element index at which to start writing values\n\t* @throws {TypeError} `this` must be a typed array instance\n\t* @throws {TypeError} index argument must be a nonnegative integer\n\t* @throws {RangeError} index argument is out-of-bounds\n\t* @throws {RangeError} target array lacks sufficient storage to accommodate source values\n\t* @returns {void}\n\t*/\n\tsetReadOnly( TypedArray.prototype, 'set', function set( value ) {\n\t\tvar sbuf;\n\t\tvar idx;\n\t\tvar buf;\n\t\tvar tmp;\n\t\tvar get;\n\t\tvar N;\n\t\tvar i;\n\t\tvar j;\n\t\tif ( !isTypedArray( this ) ) {\n\t\t\tthrow new TypeError( format( 'invalid invocation. `this` is not %s %s.', CHAR2ARTICLE[ dtype[0] ], CTOR_NAME ) );\n\t\t}\n\t\tbuf = this._buffer;\n\t\tif ( arguments.length > 1 ) {\n\t\t\tidx = arguments[ 1 ];\n\t\t\tif ( !isNonNegativeInteger( idx ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Index argument must be a nonnegative integer. Value: `%s`.', idx ) );\n\t\t\t}\n\t\t} else {\n\t\t\tidx = 0;\n\t\t}\n\t\tif ( isCollection( value ) ) {\n\t\t\tN = value.length;\n\t\t\tif ( idx+N > this._length ) {\n\t\t\t\tthrow new RangeError( 'invalid arguments. Target array lacks sufficient storage to accommodate source values.' );\n\t\t\t}\n\t\t\tsbuf = value;\n\t\t\tif ( sbuf.get && sbuf.set ) {\n\t\t\t\tget = accessorGetter( 'default' );\n\t\t\t} else {\n\t\t\t\tget = getter( 'default' );\n\t\t\t}\n\t\t\t// Check for overlapping memory...\n\t\t\tj = buf.byteOffset + (idx*BYTES_PER_ELEMENT);\n\t\t\tif (\n\t\t\t\tsbuf.buffer === buf.buffer &&\n\t\t\t\t(\n\t\t\t\t\tsbuf.byteOffset < j &&\n\t\t\t\t\tsbuf.byteOffset+sbuf.byteLength > j\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t// We need to copy source values...\n\t\t\t\ttmp = [];\n\t\t\t\tfor ( i = 0; i < value.length; i++ ) {\n\t\t\t\t\ttmp.push( get( value, i ) );\n\t\t\t\t}\n\t\t\t\tsbuf = tmp;\n\t\t\t\tget = getter( 'default' );\n\t\t\t}\n\t\t\tfor ( i = 0; i < N; idx++, i++ ) {\n\t\t\t\tbuf[ SETTER ]( idx*BYTES_PER_ELEMENT, get( sbuf, i ), this._isLE );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tif ( idx >= this._length ) {\n\t\t\tthrow new RangeError( format( 'invalid argument. Index argument is out-of-bounds. Value: `%u`.', idx ) );\n\t\t}\n\t\tbuf[ SETTER ]( idx*BYTES_PER_ELEMENT, value, this._isLE );\n\t});\n\n\t/**\n\t* Tests whether at least one element in the typed array passes a test implemented by a predicate function.\n\t*\n\t* @name some\n\t* @memberof TypedArray.prototype\n\t* @type {Function}\n\t* @param {Function} predicate - predicate function\n\t* @param {*} [thisArg] - predicate function execution context\n\t* @throws {TypeError} `this` must be a typed array instance\n\t* @throws {TypeError} first argument must be a function\n\t* @returns {boolean} boolean indicating whether at least one element passes a test\n\t*/\n\tsetReadOnly( TypedArray.prototype, 'some', function some( predicate, thisArg ) {\n\t\tvar buf;\n\t\tvar i;\n\n\t\tif ( !isTypedArray( this ) ) {\n\t\t\tthrow new TypeError( format( 'invalid invocation. `this` is not %s %s.', CHAR2ARTICLE[ dtype[0] ], CTOR_NAME ) );\n\t\t}\n\t\tif ( !isFunction( predicate ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t\t}\n\t\tbuf = this._buffer;\n\t\tfor ( i = 0; i < this._length; i++ ) {\n\t\t\tif ( predicate.call( thisArg, buf[ GETTER ]( i * BYTES_PER_ELEMENT, this._isLE ), i, this ) ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t});\n\n\t/**\n\t* Serializes an array as a string.\n\t*\n\t* @private\n\t* @name toString\n\t* @memberof TypedArray.prototype\n\t* @type {Function}\n\t* @throws {TypeError} `this` must be a typed array instance\n\t* @returns {string} string representation\n\t*/\n\tsetReadOnly( TypedArray.prototype, 'toString', function toString() {\n\t\tvar out;\n\t\tvar buf;\n\t\tvar i;\n\t\tif ( !isTypedArray( this ) ) {\n\t\t\tthrow new TypeError( format( 'invalid invocation. `this` is not %s %s.', CHAR2ARTICLE[ dtype[0] ], CTOR_NAME ) );\n\t\t}\n\t\tout = [];\n\t\tbuf = this._buffer;\n\t\tfor ( i = 0; i < this._length; i++ ) {\n\t\t\tout.push( buf[ GETTER ]( i*BYTES_PER_ELEMENT, this._isLE ) );\n\t\t}\n\t\treturn out.join( ',' );\n\t});\n\n\t/**\n\t* Serializes the array elements into a string, with elements separated by the specified `separator`.\n\t*\n\t* @private\n\t* @name join\n\t* @memberof TypedArray.prototype\n\t* @type {Function}\n\t* @param {string} [separator=','] - string used to separate consecutive elements\n\t* @throws {TypeError} `this` must be a typed array instance\n\t* @returns {string} joined string\n\t*/\n\tsetReadOnly( TypedArray.prototype, 'join', function join( separator ) {\n\t\tvar out;\n\t\tvar buf;\n\t\tvar sep;\n\t\tvar i;\n\n\t\tif ( !isTypedArray( this ) ) {\n\t\t\tthrow new TypeError( format( 'invalid invocation. `this` is not %s %s.', CHAR2ARTICLE[ dtype[0] ], CTOR_NAME ) );\n\t\t}\n\n\t\tif ( arguments.length > 0 ) {\n\t\t\tsep = String( separator );\n\t\t} else {\n\t\t\tsep = ',';\n\t\t}\n\n\t\tout = [];\n\t\tbuf = this._buffer;\n\t\tfor ( i = 0; i < this._length; i++ ) {\n\t\t\tout.push( buf[ GETTER ]( i * BYTES_PER_ELEMENT, this._isLE ) );\n\t\t}\n\n\t\treturn out.join( sep );\n\t});\n\n\treturn TypedArray;\n\n\t/**\n\t* Returns a boolean indicating if a value is a typed array constructor.\n\t*\n\t* @private\n\t* @param {*} value - value to test\n\t* @returns {boolean} boolean indicating if a value is a typed array constructor\n\t*/\n\tfunction isTypedArrayConstructor( value ) {\n\t\treturn ( value === TypedArray );\n\t}\n\n\t/**\n\t* Returns a boolean indicating if a value is a typed array.\n\t*\n\t* @private\n\t* @param {*} value - value to test\n\t* @returns {boolean} boolean indicating if a value is a typed array\n\t*/\n\tfunction isTypedArray( value ) {\n\t\treturn (\n\t\t\ttypeof value === 'object' &&\n\t\t\tvalue !== null &&\n\t\t\t(\n\t\t\t\tvalue.constructor.name === CTOR_NAME ||\n\t\t\t\tisPrototypeOf( value, TypedArray.prototype )\n\t\t\t) &&\n\t\t\tvalue.BYTES_PER_ELEMENT === BYTES_PER_ELEMENT\n\t\t);\n\t}\n\n\t/**\n\t* Fills an output DataView with array values.\n\t*\n\t* @private\n\t* @param {DataView} view - output data view\n\t* @param {Array} arr - input array\n\t* @param {boolean} isLE - boolean indicating whether to store values in little-endian byte order\n\t* @returns {DataView} output data view\n\t*/\n\tfunction fromArray( view, arr, isLE ) {\n\t\tvar len;\n\t\tvar get;\n\t\tvar i;\n\n\t\tlen = arr.length;\n\t\tif ( arr.get && arr.set ) {\n\t\t\tget = accessorGetter( 'default' );\n\t\t} else {\n\t\t\tget = getter( 'default' );\n\t\t}\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tview[ SETTER ]( i*BYTES_PER_ELEMENT, get( arr, i ), isLE );\n\t\t}\n\t\treturn view;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a typed array constructor for creating typed arrays having a specified byte order.\n*\n* @module @stdlib/array-fixed-endian-factory\n*\n* @example\n* var factory = require( '@stdlib/array-fixed-endian-factory' );\n*\n* var Float64ArrayFE = factory( 'float64' );\n*\n* var arr = new Float64ArrayFE( 'little-endian' );\n* // returns <Float64ArrayFE>\n*\n* var len = arr.length;\n* // returns 0\n*\n* @example\n* var factory = require( '@stdlib/array-fixed-endian-factory' );\n*\n* var Float64ArrayFE = factory( 'float64' );\n*\n* var arr = new Float64ArrayFE( 'little-endian', 2 );\n* // returns <Float64ArrayFE>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var factory = require( '@stdlib/array-fixed-endian-factory' );\n*\n* var Float64ArrayFE = factory( 'float64' );\n*\n* var arr = new Float64ArrayFE( 'little-endian', [ 1.0 ] );\n* // returns <Float64ArrayFE>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array-buffer' );\n* var factory = require( '@stdlib/array-fixed-endian-factory' );\n*\n* var Float64ArrayFE = factory( 'float64' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = new Float64ArrayFE( 'little-endian', buf );\n* // returns <Float64ArrayFE>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array-buffer' );\n* var factory = require( '@stdlib/array-fixed-endian-factory' );\n*\n* var Float64ArrayFE = factory( 'float64' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = new Float64ArrayFE( 'little-endian', buf, 8 );\n* // returns <Float64ArrayFE>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array-buffer' );\n* var factory = require( '@stdlib/array-fixed-endian-factory' );\n*\n* var Float64ArrayFE = factory( 'float64' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = new Float64ArrayFE( 'little-endian', buf, 8, 2 );\n* // returns <Float64ArrayFE>\n*\n* var len = arr.length;\n* // returns 2\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "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",
  "names": ["require_from_iterator", "__commonJSMin", "exports", "module", "fromIterator", "it", "out", "v", "require_from_iterator_map", "__commonJSMin", "exports", "module", "fromIteratorMap", "it", "clbk", "thisArg", "out", "v", "i", "require_main", "__commonJSMin", "exports", "module", "isNonNegativeInteger", "isInteger", "isCollection", "isArrayBuffer", "isObject", "isFunction", "isString", "isByteOrder", "lowercase", "hasIteratorSymbolSupport", "ITERATOR_SYMBOL", "setReadOnly", "isPrototypeOf", "setReadOnlyAccessor", "ArrayBuffer", "DataView", "getter", "accessorGetter", "contains", "bytesPerElement", "capitalize", "format", "fromIterator", "fromIteratorMap", "HAS_ITERATOR_SYMBOL", "LITTLE_ENDIAN", "BIG_ENDIAN", "DTYPES", "DTYPE2SET", "DTYPE2GET", "CHAR2ARTICLE", "isDataType", "byteOrder", "value", "isLittleEndian", "flag2byteOrder", "isLE", "dtype2ctor", "dtype", "factory", "BYTES_PER_ELEMENT", "CTOR_NAME", "GETTER", "SETTER", "TypedArray", "byteOffset", "endianness", "nargs", "buf", "len", "arg", "tmp", "fromArray", "src", "thisArg", "order", "clbk", "out", "get", "i", "isTypedArrayConstructor", "args", "idx", "isTypedArray", "predicate", "fcn", "searchElement", "fromIndex", "obuf", "v", "reducer", "initialValue", "acc", "sbuf", "N", "j", "separator", "sep", "view", "arr", "main"]
}
